<?php
/**
 * contentinum - accessibility websites
 *
 * LICENSE
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @category contentinum backend
 * @package View
 * @author Michael Jochum, michael.jochum@jochum-mediaservices.de
 * @copyright Copyright (c) 2009-2013 jochum-mediaservices, Katja Jochum (http://www.jochum-mediaservices.de)
 * @license http://www.opensource.org/licenses/bsd-license
 * @since contentinum version 5.0
 * @link      https://github.com/Mikel1961/contentinum-components
 * @version   1.0.0
 */
use ContentinumComponents\Html\HtmlTable;
use ContentinumComponents\Html\Table\FactoryTable;
use ClassLoaderTest\ClassD;
// prepare content, create a table
$tableFactory = new HtmlTable(new FactoryTable());
// set table tag attributes
$tableFactory->setAttributes('class', 'table tblNoSort display compact');
$tableFactory->setAttributes('id', 'mcworkTables');
$i = 0;
$iClass = 0;
$headlines = array(
    '#' => array(),
    'Linkname' => array(),
    'Contribution' => array(),//'Publish Contribution'
    'Sequence' => array(
        'head' => array(
            'class' => 'text-center'
        ),
        'body' => array(
            'class' => 'text-center'
        )    
    ),
    'Content type' => array(
        'head' => array(
            'class' => 'text-center'
        ),
        'body' => array(
            'class' => 'text-center'
        )    
    ),
    'Style' => array(
        'head' => array(
            'class' => 'text-center'
        ),
        'body' => array(
            'class' => 'text-center'
        )    
    ),
    'Publish' => array(
        'head' => array(
            'class' => 'text-center'
        ),
        'body' => array(
            'class' => 'text-center'
        )    
    ),    
    'Edit' => array(
        'head' => array(
            'class' => 'hide-for-small text-right'
        ),
        'body' => array(
            'class' => 'hide-for-small text-right'
        )
    )
)
;
$ihead = count($headlines);
foreach ($headlines as $column => $attributes) {
    $columns[] = $this->translate($column);
    if (is_array($attributes) && ! empty($attributes)) {
        foreach ($attributes as $area => $attribute) {
            switch ($area) {
                case 'head':
                    $tableFactory->setHeadlineAttributtes('class', $attribute['class'], $i);
                    break;
                case 'body':
                    $tableFactory->setTagAttributtes('class', $attribute['class'], $i);
                    break;
                default:
                    break;
            }
        }
    }
    $i ++;
}
$tableFactory->setHeadline($columns);
$i = 0;
$groupIdent = false;
$parent = '';
$title = '';
//print '<pre>';
//var_dump($this->entries);exit;
$toolbarGroup = function($webContent,$view){
    $str = '<em>'. $view->translate('Contributory group') .'</em>';
    $str .= '<br />';
    $str .= '<a href="/mcwork/contentgroup/edit/'. $webContent['groupId'] .'">';
    $str .= 'Style: '. $webContent['group_style'];
    $str .= ' <i class="fa fa-pencil"> </i></a>';
    $str .= '<br />';
    //$str .= '<a class="tblClients" href="#" data-service="Mcwork\Client\Apps" data-appkey="dissolvegroup" ';
    //$str .= 'data-ident="'. $webContent['groupId'] .'">';
    $str .= '<a href="/mcwork/contentgroup/dissolve/'. $webContent['groupId'] .'">';
    $str .= $view->translate('Dissolve') .  '</a><br />';
    $str .= '<a href="/mcwork/contentgroup/category/'. $webContent['groupId'] .'">' . $view->translate('Assort') . '</a><br />';
    return $str;
};



foreach ($this->entries as $entry) {
    $i ++;
    $rowContent = array();
    if ($entry['id']){
        $rowContent[] = '<input id="row' . $i . '" type="checkbox" value="' . $entry['id'] . '" name="cb[]">';
    } else {
        $rowContent[] = '<span class="label alert">?</span>';
    }
    $rowContent[] = $entry['label'];
    $wci = 0;
    $str = '';
    foreach ($entry['entries'] as $webContent){
        if ($wci == 1){
            $str = $toolbarGroup($webContent,$this) . $str  . '<br />';
        }
        if ($wci > 1){
            $str .= '<br />';
        }
        $str .= $webContent['title'];
        if ( isset($webContent['wcpublish']) ){
        $str .= ' <span> ' . $this->mcworkPublishItem($webContent['wcpublish'],$webContent['wcid'],'entity_content') . '</span>';
        } else {
            $str .= ' <span class="alizarin-color"> [ ERROR: linked no contribution ('.$webContent['grpcontIdent'].') ] </span>';
        }
        $wci++;
    }
    
    $rowContent[] = $str;
    
    if (isset($entry['wppid'])){
        $rowContent[] = '<a href="/mcwork/pagecontent/category/'. $entry['wppid'] .'">' . $this->translate('Assort') . ' <i class="fa fa-pencil"> </i></a></a>';
    } else {
        $rowContent[] = '<span class="alizarin-color"> [ ERROR: no page assign click on add to solve the problem ] </span>';
    }
    $rowContent[] = $entry['adjustments'];

    
    $rowContent[] = $entry['htmlwidgets'];
    
    if (isset($entry['publish'])){
        $rowContent[] = $this->mcworkPublishItem($entry['publish'],$entry['id'],'entity_page_content');
    } else {
        $rowContent[] = '';
    }
 
    if ($entry['id']){
        $props = array(
            'edit' => array(
                'href' => '/mcwork/' . $this->paramter['section'] . '/edit/' . $entry['id'],
                'attribs' => array(
                    'title' => 'Edit item',
                    'class' => 'button tiny'
                )
            ),
            'info' => array(
                'attribs' => array(
                    'data-service' => 'backend_client_app',
                    'data-appkey' => 'infoapp',
                    'data-entity' => 'entity_page_content',
                    'data-ident' => $entry['id'],
                    'data-update' => $entry['register_date'],
                    'data-registerdate' => $entry['up_date'],
                    'data-createby' => $entry['created_by'],
                    'data-updateby' => $entry['update_by'],
                    'data-username' => $this->identity->name,
                    'data-role' => $this->role,
                    'title' => 'Properties',
                    'class' => 'button tiny infotip'
                )
            )
        );        
    } else {
        $props = array(
            'add' => array(
                'href' => '/mcwork/' . $this->paramter['section'] . '/add/' . $entry['groupId'],
                'attribs' => array(
                    'title' => 'Add item',
                    'class' => 'button tiny alert'
                )
            ),            
            
        );
    }
    $rowContent[] = $this->mcworkToolbar($props, true, $this->tableeditcontent->toArray(), false );
    $tableFactory->setHtmlContent($rowContent);
}
if (true === $this->xmlHttpRequest){
    print $tableFactory->display();
    exit();
}
$toolbar = '';
if (isset($this->toolbarcontent)) {
    $links = array(
        'edit' => array(
            'href' => '/mcwork/' . $this->paramter['section'] . '/edit'
        ),
        'delete' => array(
            'href' => '/mcwork/' . $this->paramter['section'] . '/delete'
        )
    );
    $toolbar = $this->mcworkToolbar($links, true, $this->toolbarcontent->toArray());
}
print '<div class="row toprow"><div class="medium-6 columns"><h2>' . $this->translate($this->content['headline']) . '</h2>';
print '</div><div class="medium-6 columns">'. $this->mcworkToolbar($links, true, $this->toolbarcontent->toArray());
print '</div></div>';
print $this->mcworkAlert($this->messages, $this->msgtype);
print '<div class="row"><div id="addTblContent" class="medium-12 columns">';
print $tableFactory->display();
if (isset($this->content['content']) && strlen($this->content['content']) > 1) {
    echo $this->content['content'];
}
print '</div></div>';
?>