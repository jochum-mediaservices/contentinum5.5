<?php
/**
 * contentinum - accessibility websites
 *
 * LICENSE
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @category contentinum backend
 * @package View
 * @author Michael Jochum, michael.jochum@jochum-mediaservices.de
 * @copyright Copyright (c) 2009-2013 jochum-mediaservices, Katja Jochum (http://www.jochum-mediaservices.de)
 * @license http://www.opensource.org/licenses/bsd-license
 * @since contentinum version 5.0
 * @link      https://github.com/Mikel1961/contentinum-components
 * @version   1.0.0
 */
use ContentinumComponents\Html\HtmlTable;
use ContentinumComponents\Html\Table\FactoryTable;
// prepare content, create a table
$tableFactory = new HtmlTable(new FactoryTable());
$ctrlpath = 'pageattribute';
// set table tag attributes
$tableFactory->setAttributes('class', 'table tblNoSort display compact');
$tableFactory->setAttributes('id', 'mcworkTables');
$i = 0;
$iClass = 0;
$headlines = array(
    '#' => array(),
    'Page' => array(),
    'Templates' => array(),
    'Assets' => array(),
    'Edit' => array(
        'head' => array(
            'class' => 'hide-for-small text-right'
        ),
        'body' => array(
            'class' => 'hide-for-small text-right'
        )
    )
)
;
$ihead = count($headlines);
foreach ($headlines as $column => $attributes) {
    $columns[] = $this->translate($column);
    if (is_array($attributes) && ! empty($attributes)) {
        foreach ($attributes as $area => $attribute) {
            switch ($area) {
                case 'head':
                    $tableFactory->setHeadlineAttributtes('class', $attribute['class'], $i);
                    break;
                case 'body':
                    $tableFactory->setTagAttributtes('class', $attribute['class'], $i);
                    break;
                default:
                    break;
            }
        }
    }
    $i ++;
}
$tableFactory->setHeadline($columns);
$i = 0;
foreach ($this->entries as $entry) {
    if (true === $this->listIsAllowed($entry, $this->identity)){
    $i ++;
    $rowContent = array();
    if ('_default' !== $entry->webPages->scope){
        $rowContent[] = '<input id="row' . $i . '" type="checkbox" value="' . $entry->id . '" name="cb[]" data-name="Attribute from ' .  $entry->webPages->label . '" />';
    } else {
        $rowContent[] = '#';
    }
    $str = '';
    if ('_default' == $entry->webPages->scope){
        $str = ' <a class="button tiny tblClients" data-tooltip aria-haspopup="true" class="has-tip" ';
        $str .= 'title="'. str_replace('%s1', $entry->webPages->label , $this->translate('Make a copy of this default page and overwrite or merge the parameters and content from %s1'))  .'" ';
        $str .= 'href="#" data-appkey="copydefaultpage" data-ident="'.$entry->webPages->id.'" data-preference="'.$entry->webPages->webPreferences->id.'" '; 
        $str .= 'data-service="backend_client_app"><i class="fa fa-files-o"> </i></a>';
    }
    
    $rowContent[] = $entry->webPages->label . $str;
    $rowContent[] = $entry->template;
    $rowContent[] = $entry->assets;
    $props = array(
        'edit' => array(
            'href' => '/mcwork/' . $this->paramter['section'] . '/edit/' . $entry->id,
            'attribs' => array(
                'title' => 'Edit item',
                'class' => 'button tiny'
            )
        ),
        'delete' => array(
            'href' => '/mcwork/' . $this->paramter['section'] . '/delete/' . $entry->id,
            'attribs' => array(
                'data-name' => $entry->webPages->label,
                'data-ident' => 'row' . $i,
                'title' => 'Delete item',
                'class' => 'button tiny alert deleteitem'
            )
        ),
        'info' => array(
            'attribs' => array(
                'data-service' => 'backend_client_app',
                'data-appkey' => 'infoapp',          
                'data-entity' =>  'entity_pageattribute',
                'data-ident' => $entry->id,                  
                'data-upDate' => $entry->upDate->format('d F Y, H:i:s'),
                'data-registerDate' => $entry->registerDate->format('d F Y, H:i:s'),
                'data-createBy' => $entry->createdBy,
                'data-updateBy' => $entry->updateBy,
                'data-username' => $this->identity->name,                
                'data-role' => $this->role,
                'title' => 'Item properties',
                'class' => 'button tiny infotip'
            )
        )
    );    
    if ('_default' == $entry->webPages->scope){
        unset($props['delete']);
    }
    $rowContent[] = $this->mcworkToolbar($props, true, $this->tableeditcontent->toArray(), false );
    $tableFactory->setHtmlContent($rowContent);
    }
}
if (true === $this->xmlHttpRequest){
    print $tableFactory->display();
    exit();
}
$toolbar = '';
if (isset($this->toolbarcontent)) {
    $links = array(
        'add' => array(
            'href' => '/mcwork/' . $this->paramter['section'] . '/add'
        ),
        'edit' => array(
            'href' => '/mcwork/' . $this->paramter['section'] . '/edit'
        ),
        'delete' => array(
            'href' => '/mcwork/' . $this->paramter['section'] . '/delete'
        )
    );
    $toolbar = $this->mcworkToolbar($links, true, $this->toolbarcontent->toArray());
}
print '<div class="row toprow"><div class="medium-6 columns"><h2>' . $this->content['headline'] . '</h2>';
print '</div><div class="medium-6 columns">'. $this->mcworkToolbar($links, true, $this->toolbarcontent->toArray());
print '</div></div>';
print $this->mcworkAlert($this->messages, $this->msgtype);
print '<div class="row"><div id="addTblContent" class="medium-12 columns">';
print $tableFactory->display();
if (isset($this->content['content']) && strlen($this->content['content']) > 1) {
    echo $this->content['content'];
}
print '</div></div>';
?>